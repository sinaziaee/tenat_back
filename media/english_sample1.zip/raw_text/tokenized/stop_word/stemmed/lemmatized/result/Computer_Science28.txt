chapter computer abstractions and technology figure a simplified view of hardware and software as hierarchical layers shown as concentric circles with hardware in the center and applications software outermost in complex applications there are often multiple layers of application software as weu for example a database system may run on top of the systems software hosting an application which in turn nms on top of the database can execute given the sophistication of modern programming languages and the simple instructions executed by the hardware the translation from a high level language program to hardwa re instructions is complex we will give a brief over view of the process and return to the subject in chapter from a high level language to the language of hardware to actually speak to an electronic machine you need to send electrical signals the easiest signals fo r machines to understand are on and off and so the machine alphabet is just two letters just as the letters of the english alphabet do not limit how much ca n be written the two letters of the computer alphabet do not limit what computers can do the two symbols for these two letters are the num bers 0 and and we commonly think of the machine language as numbers in base binary digit also called a bit or binary nllmbers we refer to each letter as a binary digit or bit computers one of the two numbers in base are slaves to our commands which are called instructions instructions which are 0 or that are the compo just collections of bits that the computer understands can be thought of as num nents of information bers for example the bits 000 00 0 00000 tell one computer to add two numbers chapter explains why we use numbers for instructions and data we don t want to steal that chapter s thunder but using numbers for both instructions and data is a foundation of computing
