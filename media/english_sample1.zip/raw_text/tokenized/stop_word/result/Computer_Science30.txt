chapter computer abstractions technology swap nt v nt high level k int emp language temp v n program v k v h c v k temp l j compiler assembly swa p language mlll add program lw 0 mips lw sw 0 sw j r j assembler binary machine 00000000 0 0000 00000000000 000 00000000000 000000 00000 0000 language 000 000 000 00000000000000000 program 000 00 00 00000000000000 00 mips 0 0 00 00 00000000000000000 0 0 000 000 00000000000000 00 000000 00000000000000000 000 figure c program complied assembly language assembled binary machine language although translation high·level language binary machine ian· guage shown tm steps compilers cut middleman produce binary machine language directly languages program examined detail chapter designed according intended use hence fortran designed sci entific computation cobol business data processing lisp symbol manipu lation oil second advantage programming languages improved programmer productivity one areas widespread agreement software develop ment takes less time develop programs written lan guages require fewer lines express idea conciseness clear advantage high level languages assembly language
