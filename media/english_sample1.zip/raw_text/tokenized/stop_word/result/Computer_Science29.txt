program first programmers communicated computers binary numbers tedious quickly invented new notations closer way humans think first notations translated bill ry hand process still tiresome using machine help program machine pioneers invented programs translate symbolic notation binary first programs named assembler program trans assembler program lates symbolic version instruction binary version example translates symbolic version instructions binary ver programmer would write sion add assembler would translate notation 000 00 0 00000 instruction tells computer add two numbers b name coined symbolic langll ge still used today assembly language assembly language sym although tremendous improvement assembly language still far bolic representation machine instructions notation scientist might like use simulate fluid flow accountant might use balance books assembly language requires programmer write one line every instruction machine follow forcing pro grammer think like machine recognition program could written translate powerful language computer instructions one great breakthroughs early days computing programmers today owe productivity sanity creation high level programming languages compilers high level programming translate programs languages instructions language portable language compiler enables programmer write high level language expression c fortran java com posed words algebraic b notation translated compiler assembly compiler would compile assembly language statement language add assembler would translate statement binary instruction tells computer add two numbers aand 000 00 0 00000 figure shows relationships among programs languages high level programming langll ges offer several important benefits first allow programmer think natural language using english words algebraic notation resulting programs look much like text like tables cryptic symbols see figure moreover allow languages
