program first programmer communicated computer binary number tedious quickly invented new notation closer way human think first notation translated bill ry hand process still tiresome using machine help program machine pioneer invented program translate symbolic notation binary first program named assembler program trans assembler program lates symbolic version instruction binary version example translates symbolic version instruction binary ver programmer would write sion add assembler would translate notation 000 00 0 00000 instruction tell computer add two number b name coined symbolic langll ge still used today assembly language assembly language sym although tremendous improvement assembly language still far bolic representation machine instruction notation scientist might like use simulate fluid flow accountant might use balance book assembly language requires programmer write one line every instruction machine follow forcing pro grammer think like machine recognition program could written translate powerful language computer instruction one great breakthrough early day computing programmer today owe productivity sanity creation high level programming language compiler high level programming translate program language instruction language portable language compiler enables programmer write high level language expression c fortran java com posed word algebraic b notation translated compiler assembly compiler would compile assembly language statement language add assembler would translate statement binary instruction tell computer add two number aand 000 00 0 00000 figure show relationship among program language high level programming langll ge offer several important benefit first allow programmer think natural language using english word algebraic notation resulting program look much like text like table cryptic symbol see figure moreover allow language
