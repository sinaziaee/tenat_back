below your program the first programmer communicated to computer in binary number but this wa so tedious that they quickly invented new notation that were closer to the way human think at first these notation were translated to bill ry by hand but this process wa still tiresome using the machine to help program the machine the pioneer invented program to translate from symbolic notation to binary the first of these program wa named an assembler this program trans assembler a program that lates a symbolic version of an instruction into the binary version for example the translates a symbolic version of instruction into the binary ver programmer would write sion add a s and the assembler would translate this notation into 000 00 0 00000 this instruction tell the computer to add the two number a and b the name coined for this symbolic langll ge still used today is assembly language assembly language a sym although a tremendous improvement assembly language is still far from the bolic representation of machine instruction notation a scientist might like to use to simulate fluid flow or that an accountant might use to balance the book assembly language requires the programmer to write one line for every instruction that the machine will follow forcing the pro grammer to think like the machine the recognition that a program could be written to translate a more powerful language into computer instruction wa one of the great breakthrough in the early day of computing programmer today owe their productivity and their sanity to the creation of high level programming language and compiler that high level programming translate program in such language into instruction language a portable language a compiler enables a programmer to write this high level language expression such a c fortran or java com posed of word and algebraic a b notation that can be translated by a compiler into assembly the compiler would compile it into this assembly language statement language add a s the assembler would translate this statement into the binary instruction that tell the computer to add the two number aand s 000 00 0 00000 figure show the relationship among these program and language high level programming langll ge offer several important benefit first they allow the programmer to think in a more natural language using english word and algebraic notation resulting in program that look much more like text than like table of cryptic symbol see figure moreover they allow language to
